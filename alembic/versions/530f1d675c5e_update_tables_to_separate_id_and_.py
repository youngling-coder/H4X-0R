"""update tables to separate id and telegram_id

Revision ID: 530f1d675c5e
Revises: faedb3dc7b0c
Create Date: 2025-03-21 15:06:06.829353

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "530f1d675c5e"
down_revision: Union[str, None] = "faedb3dc7b0c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("chats", sa.Column("telegram_id", sa.BigInteger(), nullable=True))
    op.alter_column(
        "chats",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('chats_id_seq'::regclass)"),
    )
    op.create_unique_constraint("chat_id_pkey", "chats", ["telegram_id"])
    op.add_column("messages", sa.Column("telegram_id", sa.BigInteger(), nullable=True))
    op.alter_column(
        "messages",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "messages",
        "chat_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "messages",
        "user_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.create_unique_constraint("message_id_pkey", "messages", ["telegram_id"])
    op.add_column("users", sa.Column("telegram_id", sa.BigInteger(), nullable=True))
    op.alter_column(
        "users",
        "id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.create_unique_constraint("user_id_pkey", "users", ["telegram_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("user_id_pkey", "users", type_="unique")
    op.alter_column(
        "users",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_column("users", "telegram_id")
    op.drop_constraint("message_id_pkey", "messages", type_="unique")
    op.alter_column(
        "messages",
        "user_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "messages",
        "chat_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "messages",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.drop_column("messages", "telegram_id")
    op.drop_constraint("chat_id_pkey", "chats", type_="unique")
    op.alter_column(
        "chats",
        "id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('chats_id_seq'::regclass)"),
    )
    op.drop_column("chats", "telegram_id")
    # ### end Alembic commands ###
